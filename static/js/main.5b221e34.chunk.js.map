{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["changeSizeByinputWidth","inputWidth","width","changeSizeByFrameSize","frameSize","Carousel","images","step","animationD","infinite","useState","moveItems","setMoveItems","lastItem","length","className","style","map","image","index","isVisible","transition","display","src","alt","height","type","cn","onClick","prevMoveRight","Math","min","remainingItems","Form","setInputWidth","setFrameSize","setStep","setAnimationD","setInfinite","htmlFor","id","value","onChange","e","Number","target","max","checked","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b221e34.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ninterface ICarouselProps {\n  images: string[];\n  inputWidth: number;\n  frameSize: number\n  step: number;\n  animationD: number;\n  infinite: boolean;\n}\n\nconst changeSizeByinputWidth = (inputWidth: number) => ({\n  width: `${inputWidth * 3}px`,\n});\n\nconst changeSizeByFrameSize = (frameSize: number, inputWidth: number) => ({\n  width: `${inputWidth * frameSize}px`,\n});\n\nconst Carousel: React.FC<ICarouselProps> = ({\n  images,\n  inputWidth,\n  frameSize,\n  step,\n  animationD,\n  infinite,\n}) => {\n  const [moveItems, setMoveItems] = useState(0);\n  const lastItem = images.length - frameSize;\n\n  const handleMoveRight = () => {\n    const remainingItems = images.length - (moveItems + frameSize);\n\n    if (infinite && lastItem <= moveItems) {\n      setMoveItems(0);\n    } else if (remainingItems > 0) {\n      setMoveItems(\n        (prevMoveRight) => prevMoveRight + Math.min(step, remainingItems),\n      );\n    }\n  };\n\n  const handleMoveLeft = () => {\n    if (infinite && moveItems === 0) {\n      setMoveItems(lastItem);\n    } else if (moveItems > 0) {\n      setMoveItems(\n        (prevMoveRight) => prevMoveRight - Math.min(step, prevMoveRight),\n      );\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        ...changeSizeByinputWidth(inputWidth),\n        ...changeSizeByFrameSize(frameSize, inputWidth),\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => {\n          const isVisible = index >= moveItems && index < moveItems + frameSize;\n\n          return (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transition: `transform ${animationD}ms`,\n                display: isVisible ? 'block' : 'none',\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index + 1}`}\n                style={{ width: `${inputWidth}px`, height: `${inputWidth}px` }}\n                width={inputWidth}\n              />\n            </li>\n          );\n        })}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className={cn('Carousel__button-prev', {\n            'Carousel__button-prev--disabled': moveItems === 0 && !infinite,\n          })}\n          onClick={handleMoveLeft}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('Carousel__button-next', {\n            'Carousel__button-next--disabled':\n              moveItems === images.length - frameSize && !infinite,\n          })}\n          onClick={handleMoveRight}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import './Form.scss';\n\ntype FormProps = {\n  images: string[];\n  inputWidth: number;\n  setInputWidth: (inputWidth: number) => void;\n  frameSize: number;\n  setFrameSize: (frameSize: number) => void;\n  step: number;\n  setStep: (step: number) => void;\n  animationD: number;\n  setAnimationD: (animationD: number) => void;\n  infinite: boolean;\n  setInfinite: (infinite: boolean) => void;\n};\n\nexport const Form: React.FC<FormProps> = ({\n  images,\n  inputWidth,\n  setInputWidth,\n  frameSize,\n  setFrameSize,\n  step,\n  setStep,\n  animationD,\n  setAnimationD,\n  infinite,\n  setInfinite,\n}) => {\n  return (\n    <div className=\"form\">\n      <div className=\"form__item\">\n        <label htmlFor=\"itemId\">Item Width:</label>\n        <input\n          id=\"itemId\"\n          type=\"number\"\n          value={inputWidth}\n          step={10}\n          min={10}\n          onChange={(e) => setInputWidth(Number(e.target.value))}\n          className=\"form__input\"\n        />\n      </div>\n\n      <div className=\"form__item\">\n        <label htmlFor=\"frameId\">Frame Size:</label>\n        <input\n          id=\"frameId\"\n          type=\"number\"\n          value={frameSize}\n          step={1}\n          min={1}\n          onChange={(e) => setFrameSize(Number(e.target.value))}\n          className=\"form__input\"\n        />\n      </div>\n\n      <div className=\"form__item\">\n        <label htmlFor=\"stepId\">Step:</label>\n        <input\n          id=\"stepId\"\n          type=\"number\"\n          value={step}\n          step={1}\n          min={1}\n          max={images.length}\n          onChange={(e) => setStep(Number(e.target.value))}\n          className=\"form__input\"\n        />\n      </div>\n\n      <div className=\"form__item\">\n        <label htmlFor=\"duration\">Animation Duration:</label>\n        <input\n          id=\"duration\"\n          type=\"number\"\n          value={animationD}\n          step={100}\n          min={100}\n          onChange={(e) => setAnimationD(Number(e.target.value))}\n          className=\"form__input\"\n        />\n      </div>\n\n      <div className=\"form__item\">\n        <label htmlFor=\"infinite\">Infinite:</label>\n        <input\n          id=\"infinite\"\n          type=\"checkbox\"\n          checked={infinite}\n          onChange={(e) => setInfinite(e.target.checked)}\n          className=\"form__input\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Form } from './components/Form/Form';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [inputWidth, setInputWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationD, setAnimationD] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        Carousel with\n        {' '}\n        {images.length}\n        {' '}\n        images\n      </h1>\n\n      <Form\n        images={images}\n        inputWidth={inputWidth}\n        setInputWidth={setInputWidth}\n        frameSize={frameSize}\n        setFrameSize={setFrameSize}\n        step={step}\n        setStep={setStep}\n        animationD={animationD}\n        setAnimationD={setAnimationD}\n        infinite={infinite}\n        setInfinite={setInfinite}\n      />\n\n      <Carousel\n        images={images}\n        inputWidth={inputWidth}\n        frameSize={frameSize}\n        step={step}\n        animationD={animationD}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}